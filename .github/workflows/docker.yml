name: "docker"
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: "Checking out"
      uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: "Setting up Java"
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'
        cache: 'maven'

    - name: Build georchestra dependencies
      run: ./mvnw -f georchestra/ clean install -pl :georchestra-ldap-account-management -am -DskipTests -P-all -ntp

    - name: Build gateway
      run: ./mvnw verify -pl :georchestra-gateway -ntp -T1C

    - name: Calculating docker image tag
      id: version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

    - name: "Building a docker image"
      if: github.repository == 'georchestra/georchestra-gateway'
      run: ./mvnw -f gateway/ -DimageTag=${{ steps.version.outputs.VERSION }} spring-boot:build-image -ntp -DskipTests

    - name: "Logging in to docker.io"
      if: github.repository == 'georchestra/georchestra-gateway'
      uses: azure/docker-login@v1
      with:
        username: '${{ secrets.DOCKER_HUB_USERNAME }}'
        password: '${{ secrets.DOCKER_HUB_PASSWORD }}'

    - name: "Pushing latest to docker.io"
      if: github.ref == 'refs/heads/main' && github.repository == 'georchestra/georchestra-gateway'
      run: |
        docker tag georchestra/gateway:${{ steps.version.outputs.VERSION }} georchestra/gateway:latest
        docker push georchestra/gateway:latest

    - name: "Pushing image to docker.io"
      if: github.ref != 'refs/heads/main' && github.repository == 'georchestra/georchestra-gateway'
      run: |
        docker push georchestra/gateway:${{ steps.version.outputs.VERSION }}

    - name: "Remove SNAPSHOT jars from repository"
      run: |
        find .m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
